organize somehow by subject
	gitflow
		1. local
		1. remote
		1. repoing
		1. gh-pages
		2. branching
		3. group
	js
		1. functions
		1. object-1
		1. scope-context-1
		2. debugging
		2. objects-2
		3. scope-context-2
		3. inheritance
		3. async-1 callbacks
		4. async-2 promises superficially
		4. module.export
		6. fp 1 closures
		7. fp 2 
		8. async 3
		9. fp 3
		9. es6
		10. jsx
	tools - bloated
		1. cli
		1. linters
		2. chromdev
		4. npm
		4. webpack/babel/task runners 0
		5. postman
		6. mongoose 1
		7. passport local
		7. passport jwt
		7. mongoose.populate
		8. axios
		8. testing frameworks
		8. local modules
		9. lodash
		10. webpack 2
	node + express
		1. node-1
		5. node-2
		5. express overview
		5. debugging in node/express
		5. environmental variables
		6. understanding express apps
		6. sessions
		7. auth-sessions
	special friday
		1. a
		1. b
		1. c
	react
		10. react stuff
		11. react router
	DOM
		2. html
		2. css
		2. DOManip-1
		4. dom-2 page lifecycle
	app-design
		2. objects-as-apps
		2. data-modeling-1
		2. mvc
		3. oop-modeling-classes
		4. data modeling 2
		6. data modeling 
		8. separation of concerns - services
		8. api design
		9. SPAs
		9. functional app  (immutable data)
		10. mvvm
		11. move
		11. dependancy injection 
	testing
		1. unit tests
		5. sprints, tests, tddish
		8. api testing
		8. frontend testing
		8. using/choosing frameworks
	dev-knowledge - bloated?
		2. computers and programming languages
		2. writing readable code
		3. stories to sprints
		4. .sh scripts
		5. deployment 1
		5. the internet, req/res
		6. reading codebase
		7. cyber security
		7. deployment 
		8. oop vs functional
		9. design patterns
		9. open-source contributing
	algorithms 
		3. algols 1
		3. bst-recursion
		8. complexity is counting
		12. algorithm resources
